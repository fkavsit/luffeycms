#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LuffeyCMS_v04_Alpha")]
public partial class LuffeyCMSDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertCompany(Company instance);
  partial void UpdateCompany(Company instance);
  partial void DeleteCompany(Company instance);
  partial void InsertStatistic(Statistic instance);
  partial void UpdateStatistic(Statistic instance);
  partial void DeleteStatistic(Statistic instance);
  partial void InsertContact(Contact instance);
  partial void UpdateContact(Contact instance);
  partial void DeleteContact(Contact instance);
  partial void InsertLibrary(Library instance);
  partial void UpdateLibrary(Library instance);
  partial void DeleteLibrary(Library instance);
  partial void InsertMail(Mail instance);
  partial void UpdateMail(Mail instance);
  partial void DeleteMail(Mail instance);
  partial void InsertMember(Member instance);
  partial void UpdateMember(Member instance);
  partial void DeleteMember(Member instance);
  partial void InsertMemberType(MemberType instance);
  partial void UpdateMemberType(MemberType instance);
  partial void DeleteMemberType(MemberType instance);
  partial void InsertMenu(Menu instance);
  partial void UpdateMenu(Menu instance);
  partial void DeleteMenu(Menu instance);
  partial void InsertNew(New instance);
  partial void UpdateNew(New instance);
  partial void DeleteNew(New instance);
  partial void InsertNews_Category(News_Category instance);
  partial void UpdateNews_Category(News_Category instance);
  partial void DeleteNews_Category(News_Category instance);
  partial void InsertNewsComment(NewsComment instance);
  partial void UpdateNewsComment(NewsComment instance);
  partial void DeleteNewsComment(NewsComment instance);
  partial void InsertPage(Page instance);
  partial void UpdatePage(Page instance);
  partial void DeletePage(Page instance);
  partial void InsertProduct(Product instance);
  partial void UpdateProduct(Product instance);
  partial void DeleteProduct(Product instance);
  partial void InsertProduct_ProductImage(Product_ProductImage instance);
  partial void UpdateProduct_ProductImage(Product_ProductImage instance);
  partial void DeleteProduct_ProductImage(Product_ProductImage instance);
  partial void InsertProductCategory(ProductCategory instance);
  partial void UpdateProductCategory(ProductCategory instance);
  partial void DeleteProductCategory(ProductCategory instance);
  partial void InsertProductComment(ProductComment instance);
  partial void UpdateProductComment(ProductComment instance);
  partial void DeleteProductComment(ProductComment instance);
  partial void InsertProductImage(ProductImage instance);
  partial void UpdateProductImage(ProductImage instance);
  partial void DeleteProductImage(ProductImage instance);
  partial void InsertProductPayment(ProductPayment instance);
  partial void UpdateProductPayment(ProductPayment instance);
  partial void DeleteProductPayment(ProductPayment instance);
  partial void InsertSeo(Seo instance);
  partial void UpdateSeo(Seo instance);
  partial void DeleteSeo(Seo instance);
  partial void InsertSlider(Slider instance);
  partial void UpdateSlider(Slider instance);
  partial void DeleteSlider(Slider instance);
  #endregion
	
	public LuffeyCMSDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["LuffeyCMS_v04_AlphaConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public LuffeyCMSDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public LuffeyCMSDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public LuffeyCMSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public LuffeyCMSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Company> Companies
	{
		get
		{
			return this.GetTable<Company>();
		}
	}
	
	public System.Data.Linq.Table<Statistic> Statistics
	{
		get
		{
			return this.GetTable<Statistic>();
		}
	}
	
	public System.Data.Linq.Table<Contact> Contacts
	{
		get
		{
			return this.GetTable<Contact>();
		}
	}
	
	public System.Data.Linq.Table<Library> Libraries
	{
		get
		{
			return this.GetTable<Library>();
		}
	}
	
	public System.Data.Linq.Table<Mail> Mails
	{
		get
		{
			return this.GetTable<Mail>();
		}
	}
	
	public System.Data.Linq.Table<Member> Members
	{
		get
		{
			return this.GetTable<Member>();
		}
	}
	
	public System.Data.Linq.Table<MemberType> MemberTypes
	{
		get
		{
			return this.GetTable<MemberType>();
		}
	}
	
	public System.Data.Linq.Table<Menu> Menus
	{
		get
		{
			return this.GetTable<Menu>();
		}
	}
	
	public System.Data.Linq.Table<New> News
	{
		get
		{
			return this.GetTable<New>();
		}
	}
	
	public System.Data.Linq.Table<News_Category> News_Categories
	{
		get
		{
			return this.GetTable<News_Category>();
		}
	}
	
	public System.Data.Linq.Table<NewsComment> NewsComments
	{
		get
		{
			return this.GetTable<NewsComment>();
		}
	}
	
	public System.Data.Linq.Table<Page> Pages
	{
		get
		{
			return this.GetTable<Page>();
		}
	}
	
	public System.Data.Linq.Table<Product> Products
	{
		get
		{
			return this.GetTable<Product>();
		}
	}
	
	public System.Data.Linq.Table<Product_ProductCategory> Product_ProductCategories
	{
		get
		{
			return this.GetTable<Product_ProductCategory>();
		}
	}
	
	public System.Data.Linq.Table<Product_ProductImage> Product_ProductImages
	{
		get
		{
			return this.GetTable<Product_ProductImage>();
		}
	}
	
	public System.Data.Linq.Table<ProductCategory> ProductCategories
	{
		get
		{
			return this.GetTable<ProductCategory>();
		}
	}
	
	public System.Data.Linq.Table<ProductComment> ProductComments
	{
		get
		{
			return this.GetTable<ProductComment>();
		}
	}
	
	public System.Data.Linq.Table<ProductImage> ProductImages
	{
		get
		{
			return this.GetTable<ProductImage>();
		}
	}
	
	public System.Data.Linq.Table<ProductPayment> ProductPayments
	{
		get
		{
			return this.GetTable<ProductPayment>();
		}
	}
	
	public System.Data.Linq.Table<Seo> Seos
	{
		get
		{
			return this.GetTable<Seo>();
		}
	}
	
	public System.Data.Linq.Table<Slider> Sliders
	{
		get
		{
			return this.GetTable<Slider>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private string _Information;
	
	private string _Phone;
	
	private string _Phone2;
	
	private string _Phone3;
	
	private string _MobilePhone;
	
	private string _MobilePhone2;
	
	private string _Email;
	
	private string _Email2;
	
	private string _Fax;
	
	private string _GoogleMapsURL;
	
	private string _FacebookURL;
	
	private string _TwitterURL;
	
	private string _WhatsAppURL;
	
	private string _InstagramURL;
	
	private string _GooglePlusURL;
	
	private string _YoutubeURL;
	
	private string _SkypeURL;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnInformationChanging(string value);
    partial void OnInformationChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnPhone3Changing(string value);
    partial void OnPhone3Changed();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnMobilePhone2Changing(string value);
    partial void OnMobilePhone2Changed();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmail2Changing(string value);
    partial void OnEmail2Changed();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnGoogleMapsURLChanging(string value);
    partial void OnGoogleMapsURLChanged();
    partial void OnFacebookURLChanging(string value);
    partial void OnFacebookURLChanged();
    partial void OnTwitterURLChanging(string value);
    partial void OnTwitterURLChanged();
    partial void OnWhatsAppURLChanging(string value);
    partial void OnWhatsAppURLChanged();
    partial void OnInstagramURLChanging(string value);
    partial void OnInstagramURLChanged();
    partial void OnGooglePlusURLChanging(string value);
    partial void OnGooglePlusURLChanged();
    partial void OnYoutubeURLChanging(string value);
    partial void OnYoutubeURLChanged();
    partial void OnSkypeURLChanging(string value);
    partial void OnSkypeURLChanged();
    #endregion
	
	public Company()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Information", DbType="NVarChar(MAX)")]
	public string Information
	{
		get
		{
			return this._Information;
		}
		set
		{
			if ((this._Information != value))
			{
				this.OnInformationChanging(value);
				this.SendPropertyChanging();
				this._Information = value;
				this.SendPropertyChanged("Information");
				this.OnInformationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NChar(10)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="VarChar(25)")]
	public string Phone2
	{
		get
		{
			return this._Phone2;
		}
		set
		{
			if ((this._Phone2 != value))
			{
				this.OnPhone2Changing(value);
				this.SendPropertyChanging();
				this._Phone2 = value;
				this.SendPropertyChanged("Phone2");
				this.OnPhone2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone3", DbType="NChar(10)")]
	public string Phone3
	{
		get
		{
			return this._Phone3;
		}
		set
		{
			if ((this._Phone3 != value))
			{
				this.OnPhone3Changing(value);
				this.SendPropertyChanging();
				this._Phone3 = value;
				this.SendPropertyChanged("Phone3");
				this.OnPhone3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="NChar(10)")]
	public string MobilePhone
	{
		get
		{
			return this._MobilePhone;
		}
		set
		{
			if ((this._MobilePhone != value))
			{
				this.OnMobilePhoneChanging(value);
				this.SendPropertyChanging();
				this._MobilePhone = value;
				this.SendPropertyChanged("MobilePhone");
				this.OnMobilePhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone2", DbType="NChar(10)")]
	public string MobilePhone2
	{
		get
		{
			return this._MobilePhone2;
		}
		set
		{
			if ((this._MobilePhone2 != value))
			{
				this.OnMobilePhone2Changing(value);
				this.SendPropertyChanging();
				this._MobilePhone2 = value;
				this.SendPropertyChanged("MobilePhone2");
				this.OnMobilePhone2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email2", DbType="NChar(10)")]
	public string Email2
	{
		get
		{
			return this._Email2;
		}
		set
		{
			if ((this._Email2 != value))
			{
				this.OnEmail2Changing(value);
				this.SendPropertyChanging();
				this._Email2 = value;
				this.SendPropertyChanged("Email2");
				this.OnEmail2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(25)")]
	public string Fax
	{
		get
		{
			return this._Fax;
		}
		set
		{
			if ((this._Fax != value))
			{
				this.OnFaxChanging(value);
				this.SendPropertyChanging();
				this._Fax = value;
				this.SendPropertyChanged("Fax");
				this.OnFaxChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoogleMapsURL", DbType="NVarChar(250)")]
	public string GoogleMapsURL
	{
		get
		{
			return this._GoogleMapsURL;
		}
		set
		{
			if ((this._GoogleMapsURL != value))
			{
				this.OnGoogleMapsURLChanging(value);
				this.SendPropertyChanging();
				this._GoogleMapsURL = value;
				this.SendPropertyChanged("GoogleMapsURL");
				this.OnGoogleMapsURLChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacebookURL", DbType="NVarChar(150)")]
	public string FacebookURL
	{
		get
		{
			return this._FacebookURL;
		}
		set
		{
			if ((this._FacebookURL != value))
			{
				this.OnFacebookURLChanging(value);
				this.SendPropertyChanging();
				this._FacebookURL = value;
				this.SendPropertyChanged("FacebookURL");
				this.OnFacebookURLChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwitterURL", DbType="NVarChar(150)")]
	public string TwitterURL
	{
		get
		{
			return this._TwitterURL;
		}
		set
		{
			if ((this._TwitterURL != value))
			{
				this.OnTwitterURLChanging(value);
				this.SendPropertyChanging();
				this._TwitterURL = value;
				this.SendPropertyChanged("TwitterURL");
				this.OnTwitterURLChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhatsAppURL", DbType="NVarChar(50)")]
	public string WhatsAppURL
	{
		get
		{
			return this._WhatsAppURL;
		}
		set
		{
			if ((this._WhatsAppURL != value))
			{
				this.OnWhatsAppURLChanging(value);
				this.SendPropertyChanging();
				this._WhatsAppURL = value;
				this.SendPropertyChanged("WhatsAppURL");
				this.OnWhatsAppURLChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstagramURL", DbType="NVarChar(150)")]
	public string InstagramURL
	{
		get
		{
			return this._InstagramURL;
		}
		set
		{
			if ((this._InstagramURL != value))
			{
				this.OnInstagramURLChanging(value);
				this.SendPropertyChanging();
				this._InstagramURL = value;
				this.SendPropertyChanged("InstagramURL");
				this.OnInstagramURLChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GooglePlusURL", DbType="NVarChar(150)")]
	public string GooglePlusURL
	{
		get
		{
			return this._GooglePlusURL;
		}
		set
		{
			if ((this._GooglePlusURL != value))
			{
				this.OnGooglePlusURLChanging(value);
				this.SendPropertyChanging();
				this._GooglePlusURL = value;
				this.SendPropertyChanged("GooglePlusURL");
				this.OnGooglePlusURLChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YoutubeURL", DbType="NVarChar(150)")]
	public string YoutubeURL
	{
		get
		{
			return this._YoutubeURL;
		}
		set
		{
			if ((this._YoutubeURL != value))
			{
				this.OnYoutubeURLChanging(value);
				this.SendPropertyChanging();
				this._YoutubeURL = value;
				this.SendPropertyChanged("YoutubeURL");
				this.OnYoutubeURLChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkypeURL", DbType="NVarChar(50)")]
	public string SkypeURL
	{
		get
		{
			return this._SkypeURL;
		}
		set
		{
			if ((this._SkypeURL != value))
			{
				this.OnSkypeURLChanging(value);
				this.SendPropertyChanging();
				this._SkypeURL = value;
				this.SendPropertyChanged("SkypeURL");
				this.OnSkypeURLChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Statistics]")]
public partial class Statistic : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _adress;
	
	private string _ip;
	
	private string _time;
	
	private string _browser;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnadressChanging(string value);
    partial void OnadressChanged();
    partial void OnipChanging(string value);
    partial void OnipChanged();
    partial void OntimeChanging(string value);
    partial void OntimeChanged();
    partial void OnbrowserChanging(string value);
    partial void OnbrowserChanged();
    #endregion
	
	public Statistic()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adress", DbType="NVarChar(300)")]
	public string adress
	{
		get
		{
			return this._adress;
		}
		set
		{
			if ((this._adress != value))
			{
				this.OnadressChanging(value);
				this.SendPropertyChanging();
				this._adress = value;
				this.SendPropertyChanged("adress");
				this.OnadressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ip", DbType="NVarChar(30)")]
	public string ip
	{
		get
		{
			return this._ip;
		}
		set
		{
			if ((this._ip != value))
			{
				this.OnipChanging(value);
				this.SendPropertyChanging();
				this._ip = value;
				this.SendPropertyChanged("ip");
				this.OnipChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="NVarChar(100)")]
	public string time
	{
		get
		{
			return this._time;
		}
		set
		{
			if ((this._time != value))
			{
				this.OntimeChanging(value);
				this.SendPropertyChanging();
				this._time = value;
				this.SendPropertyChanged("time");
				this.OntimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_browser", DbType="NVarChar(300)")]
	public string browser
	{
		get
		{
			return this._browser;
		}
		set
		{
			if ((this._browser != value))
			{
				this.OnbrowserChanging(value);
				this.SendPropertyChanging();
				this._browser = value;
				this.SendPropertyChanged("browser");
				this.OnbrowserChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contact")]
public partial class Contact : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private string _Email;
	
	private System.Nullable<System.DateTime> _Date;
	
	private string _Phone;
	
	private string _Summary;
	
	private string _Message;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    #endregion
	
	public Contact()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(20)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(100)")]
	public string Summary
	{
		get
		{
			return this._Summary;
		}
		set
		{
			if ((this._Summary != value))
			{
				this.OnSummaryChanging(value);
				this.SendPropertyChanging();
				this._Summary = value;
				this.SendPropertyChanged("Summary");
				this.OnSummaryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(250)")]
	public string Message
	{
		get
		{
			return this._Message;
		}
		set
		{
			if ((this._Message != value))
			{
				this.OnMessageChanging(value);
				this.SendPropertyChanging();
				this._Message = value;
				this.SendPropertyChanged("Message");
				this.OnMessageChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Library")]
public partial class Library : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Content;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    #endregion
	
	public Library()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(50)")]
	public string Content
	{
		get
		{
			return this._Content;
		}
		set
		{
			if ((this._Content != value))
			{
				this.OnContentChanging(value);
				this.SendPropertyChanging();
				this._Content = value;
				this.SendPropertyChanged("Content");
				this.OnContentChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mail")]
public partial class Mail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private bool _Enable;
	
	private string _Email;
	
	private string _Password;
	
	private int _SMTP_Port;
	
	private bool _Enable_SSL;
	
	private string _SMTP_Host;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEnableChanging(bool value);
    partial void OnEnableChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnSMTP_PortChanging(int value);
    partial void OnSMTP_PortChanged();
    partial void OnEnable_SSLChanging(bool value);
    partial void OnEnable_SSLChanged();
    partial void OnSMTP_HostChanging(string value);
    partial void OnSMTP_HostChanged();
    #endregion
	
	public Mail()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enable", DbType="Bit NOT NULL")]
	public bool Enable
	{
		get
		{
			return this._Enable;
		}
		set
		{
			if ((this._Enable != value))
			{
				this.OnEnableChanging(value);
				this.SendPropertyChanging();
				this._Enable = value;
				this.SendPropertyChanged("Enable");
				this.OnEnableChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMTP_Port", DbType="Int NOT NULL")]
	public int SMTP_Port
	{
		get
		{
			return this._SMTP_Port;
		}
		set
		{
			if ((this._SMTP_Port != value))
			{
				this.OnSMTP_PortChanging(value);
				this.SendPropertyChanging();
				this._SMTP_Port = value;
				this.SendPropertyChanged("SMTP_Port");
				this.OnSMTP_PortChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enable_SSL", DbType="Bit NOT NULL")]
	public bool Enable_SSL
	{
		get
		{
			return this._Enable_SSL;
		}
		set
		{
			if ((this._Enable_SSL != value))
			{
				this.OnEnable_SSLChanging(value);
				this.SendPropertyChanging();
				this._Enable_SSL = value;
				this.SendPropertyChanged("Enable_SSL");
				this.OnEnable_SSLChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMTP_Host", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string SMTP_Host
	{
		get
		{
			return this._SMTP_Host;
		}
		set
		{
			if ((this._SMTP_Host != value))
			{
				this.OnSMTP_HostChanging(value);
				this.SendPropertyChanging();
				this._SMTP_Host = value;
				this.SendPropertyChanged("SMTP_Host");
				this.OnSMTP_HostChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Members")]
public partial class Member : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private string _Surname;
	
	private int _MemberTypeID;
	
	private string _Email;
	
	private string _FacebookUrl;
	
	private string _UserName;
	
	private string _Password;
	
	private System.Nullable<bool> _Online;
	
	private System.Nullable<System.DateTime> _JoinDay;
	
	private string _ActivationKey;
	
	private System.Nullable<bool> _Banned;
	
	private System.Nullable<bool> _Activated;
	
	private EntityRef<MemberType> _MemberType;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnMemberTypeIDChanging(int value);
    partial void OnMemberTypeIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnFacebookUrlChanging(string value);
    partial void OnFacebookUrlChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnOnlineChanging(System.Nullable<bool> value);
    partial void OnOnlineChanged();
    partial void OnJoinDayChanging(System.Nullable<System.DateTime> value);
    partial void OnJoinDayChanged();
    partial void OnActivationKeyChanging(string value);
    partial void OnActivationKeyChanged();
    partial void OnBannedChanging(System.Nullable<bool> value);
    partial void OnBannedChanged();
    partial void OnActivatedChanging(System.Nullable<bool> value);
    partial void OnActivatedChanged();
    #endregion
	
	public Member()
	{
		this._MemberType = default(EntityRef<MemberType>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(50)")]
	public string Surname
	{
		get
		{
			return this._Surname;
		}
		set
		{
			if ((this._Surname != value))
			{
				this.OnSurnameChanging(value);
				this.SendPropertyChanging();
				this._Surname = value;
				this.SendPropertyChanged("Surname");
				this.OnSurnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberTypeID", DbType="Int NOT NULL")]
	public int MemberTypeID
	{
		get
		{
			return this._MemberTypeID;
		}
		set
		{
			if ((this._MemberTypeID != value))
			{
				if (this._MemberType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMemberTypeIDChanging(value);
				this.SendPropertyChanging();
				this._MemberTypeID = value;
				this.SendPropertyChanged("MemberTypeID");
				this.OnMemberTypeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacebookUrl", DbType="NVarChar(150)")]
	public string FacebookUrl
	{
		get
		{
			return this._FacebookUrl;
		}
		set
		{
			if ((this._FacebookUrl != value))
			{
				this.OnFacebookUrlChanging(value);
				this.SendPropertyChanging();
				this._FacebookUrl = value;
				this.SendPropertyChanged("FacebookUrl");
				this.OnFacebookUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(20)")]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(40)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Online", DbType="Bit")]
	public System.Nullable<bool> Online
	{
		get
		{
			return this._Online;
		}
		set
		{
			if ((this._Online != value))
			{
				this.OnOnlineChanging(value);
				this.SendPropertyChanging();
				this._Online = value;
				this.SendPropertyChanged("Online");
				this.OnOnlineChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinDay", DbType="Date")]
	public System.Nullable<System.DateTime> JoinDay
	{
		get
		{
			return this._JoinDay;
		}
		set
		{
			if ((this._JoinDay != value))
			{
				this.OnJoinDayChanging(value);
				this.SendPropertyChanging();
				this._JoinDay = value;
				this.SendPropertyChanged("JoinDay");
				this.OnJoinDayChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationKey", DbType="NVarChar(50)")]
	public string ActivationKey
	{
		get
		{
			return this._ActivationKey;
		}
		set
		{
			if ((this._ActivationKey != value))
			{
				this.OnActivationKeyChanging(value);
				this.SendPropertyChanging();
				this._ActivationKey = value;
				this.SendPropertyChanged("ActivationKey");
				this.OnActivationKeyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Banned", DbType="Bit")]
	public System.Nullable<bool> Banned
	{
		get
		{
			return this._Banned;
		}
		set
		{
			if ((this._Banned != value))
			{
				this.OnBannedChanging(value);
				this.SendPropertyChanging();
				this._Banned = value;
				this.SendPropertyChanged("Banned");
				this.OnBannedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activated", DbType="Bit")]
	public System.Nullable<bool> Activated
	{
		get
		{
			return this._Activated;
		}
		set
		{
			if ((this._Activated != value))
			{
				this.OnActivatedChanging(value);
				this.SendPropertyChanging();
				this._Activated = value;
				this.SendPropertyChanged("Activated");
				this.OnActivatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MemberType_Member", Storage="_MemberType", ThisKey="MemberTypeID", OtherKey="ID", IsForeignKey=true)]
	public MemberType MemberType
	{
		get
		{
			return this._MemberType.Entity;
		}
		set
		{
			MemberType previousValue = this._MemberType.Entity;
			if (((previousValue != value) 
						|| (this._MemberType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._MemberType.Entity = null;
					previousValue.Members.Remove(this);
				}
				this._MemberType.Entity = value;
				if ((value != null))
				{
					value.Members.Add(this);
					this._MemberTypeID = value.ID;
				}
				else
				{
					this._MemberTypeID = default(int);
				}
				this.SendPropertyChanged("MemberType");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MemberType")]
public partial class MemberType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Title;
	
	private EntitySet<Member> _Members;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
	
	public MemberType()
	{
		this._Members = new EntitySet<Member>(new Action<Member>(this.attach_Members), new Action<Member>(this.detach_Members));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MemberType_Member", Storage="_Members", ThisKey="ID", OtherKey="MemberTypeID")]
	public EntitySet<Member> Members
	{
		get
		{
			return this._Members;
		}
		set
		{
			this._Members.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Members(Member entity)
	{
		this.SendPropertyChanging();
		entity.MemberType = this;
	}
	
	private void detach_Members(Member entity)
	{
		this.SendPropertyChanging();
		entity.MemberType = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Menu")]
public partial class Menu : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Title;
	
	private string _Link;
	
	private System.Nullable<int> _Queue;
	
	private System.Nullable<int> _UpMenuID;
	
	private EntitySet<Menu> _Menus;
	
	private EntityRef<Menu> _Menu1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnQueueChanging(System.Nullable<int> value);
    partial void OnQueueChanged();
    partial void OnUpMenuIDChanging(System.Nullable<int> value);
    partial void OnUpMenuIDChanged();
    #endregion
	
	public Menu()
	{
		this._Menus = new EntitySet<Menu>(new Action<Menu>(this.attach_Menus), new Action<Menu>(this.detach_Menus));
		this._Menu1 = default(EntityRef<Menu>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Link
	{
		get
		{
			return this._Link;
		}
		set
		{
			if ((this._Link != value))
			{
				this.OnLinkChanging(value);
				this.SendPropertyChanging();
				this._Link = value;
				this.SendPropertyChanged("Link");
				this.OnLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Queue", DbType="Int")]
	public System.Nullable<int> Queue
	{
		get
		{
			return this._Queue;
		}
		set
		{
			if ((this._Queue != value))
			{
				this.OnQueueChanging(value);
				this.SendPropertyChanging();
				this._Queue = value;
				this.SendPropertyChanged("Queue");
				this.OnQueueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpMenuID", DbType="Int")]
	public System.Nullable<int> UpMenuID
	{
		get
		{
			return this._UpMenuID;
		}
		set
		{
			if ((this._UpMenuID != value))
			{
				if (this._Menu1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUpMenuIDChanging(value);
				this.SendPropertyChanging();
				this._UpMenuID = value;
				this.SendPropertyChanged("UpMenuID");
				this.OnUpMenuIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_Menu", Storage="_Menus", ThisKey="ID", OtherKey="UpMenuID")]
	public EntitySet<Menu> Menus
	{
		get
		{
			return this._Menus;
		}
		set
		{
			this._Menus.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_Menu", Storage="_Menu1", ThisKey="UpMenuID", OtherKey="ID", IsForeignKey=true)]
	public Menu Menu1
	{
		get
		{
			return this._Menu1.Entity;
		}
		set
		{
			Menu previousValue = this._Menu1.Entity;
			if (((previousValue != value) 
						|| (this._Menu1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Menu1.Entity = null;
					previousValue.Menus.Remove(this);
				}
				this._Menu1.Entity = value;
				if ((value != null))
				{
					value.Menus.Add(this);
					this._UpMenuID = value.ID;
				}
				else
				{
					this._UpMenuID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Menu1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Menus(Menu entity)
	{
		this.SendPropertyChanging();
		entity.Menu1 = this;
	}
	
	private void detach_Menus(Menu entity)
	{
		this.SendPropertyChanging();
		entity.Menu1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.News")]
public partial class New : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Title;
	
	private string _Summary;
	
	private string _Content;
	
	private System.Nullable<int> _MemberID;
	
	private System.Nullable<int> _ReadCount;
	
	private System.Nullable<System.DateTime> _Date;
	
	private System.Nullable<int> _CategoryID;
	
	private string _Image;
	
	private System.Nullable<bool> _ShowComment;
	
	private EntitySet<NewsComment> _NewsComments;
	
	private EntityRef<News_Category> _News_Category;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnMemberIDChanging(System.Nullable<int> value);
    partial void OnMemberIDChanged();
    partial void OnReadCountChanging(System.Nullable<int> value);
    partial void OnReadCountChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnCategoryIDChanging(System.Nullable<int> value);
    partial void OnCategoryIDChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnShowCommentChanging(System.Nullable<bool> value);
    partial void OnShowCommentChanged();
    #endregion
	
	public New()
	{
		this._NewsComments = new EntitySet<NewsComment>(new Action<NewsComment>(this.attach_NewsComments), new Action<NewsComment>(this.detach_NewsComments));
		this._News_Category = default(EntityRef<News_Category>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NChar(10)")]
	public string Summary
	{
		get
		{
			return this._Summary;
		}
		set
		{
			if ((this._Summary != value))
			{
				this.OnSummaryChanging(value);
				this.SendPropertyChanging();
				this._Summary = value;
				this.SendPropertyChanged("Summary");
				this.OnSummaryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
	public string Content
	{
		get
		{
			return this._Content;
		}
		set
		{
			if ((this._Content != value))
			{
				this.OnContentChanging(value);
				this.SendPropertyChanging();
				this._Content = value;
				this.SendPropertyChanged("Content");
				this.OnContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int")]
	public System.Nullable<int> MemberID
	{
		get
		{
			return this._MemberID;
		}
		set
		{
			if ((this._MemberID != value))
			{
				this.OnMemberIDChanging(value);
				this.SendPropertyChanging();
				this._MemberID = value;
				this.SendPropertyChanged("MemberID");
				this.OnMemberIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadCount", DbType="Int")]
	public System.Nullable<int> ReadCount
	{
		get
		{
			return this._ReadCount;
		}
		set
		{
			if ((this._ReadCount != value))
			{
				this.OnReadCountChanging(value);
				this.SendPropertyChanging();
				this._ReadCount = value;
				this.SendPropertyChanged("ReadCount");
				this.OnReadCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int")]
	public System.Nullable<int> CategoryID
	{
		get
		{
			return this._CategoryID;
		}
		set
		{
			if ((this._CategoryID != value))
			{
				if (this._News_Category.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCategoryIDChanging(value);
				this.SendPropertyChanging();
				this._CategoryID = value;
				this.SendPropertyChanged("CategoryID");
				this.OnCategoryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(50)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowComment", DbType="Bit")]
	public System.Nullable<bool> ShowComment
	{
		get
		{
			return this._ShowComment;
		}
		set
		{
			if ((this._ShowComment != value))
			{
				this.OnShowCommentChanging(value);
				this.SendPropertyChanging();
				this._ShowComment = value;
				this.SendPropertyChanged("ShowComment");
				this.OnShowCommentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="New_NewsComment", Storage="_NewsComments", ThisKey="ID", OtherKey="NewsID")]
	public EntitySet<NewsComment> NewsComments
	{
		get
		{
			return this._NewsComments;
		}
		set
		{
			this._NewsComments.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="News_Category_New", Storage="_News_Category", ThisKey="CategoryID", OtherKey="ID", IsForeignKey=true)]
	public News_Category News_Category
	{
		get
		{
			return this._News_Category.Entity;
		}
		set
		{
			News_Category previousValue = this._News_Category.Entity;
			if (((previousValue != value) 
						|| (this._News_Category.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._News_Category.Entity = null;
					previousValue.News.Remove(this);
				}
				this._News_Category.Entity = value;
				if ((value != null))
				{
					value.News.Add(this);
					this._CategoryID = value.ID;
				}
				else
				{
					this._CategoryID = default(Nullable<int>);
				}
				this.SendPropertyChanged("News_Category");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_NewsComments(NewsComment entity)
	{
		this.SendPropertyChanging();
		entity.New = this;
	}
	
	private void detach_NewsComments(NewsComment entity)
	{
		this.SendPropertyChanging();
		entity.New = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.News_Category")]
public partial class News_Category : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Title;
	
	private System.Nullable<int> _UpCategoryID;
	
	private EntitySet<New> _News;
	
	private EntitySet<News_Category> _News_Categories;
	
	private EntityRef<News_Category> _News_Category1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnUpCategoryIDChanging(System.Nullable<int> value);
    partial void OnUpCategoryIDChanged();
    #endregion
	
	public News_Category()
	{
		this._News = new EntitySet<New>(new Action<New>(this.attach_News), new Action<New>(this.detach_News));
		this._News_Categories = new EntitySet<News_Category>(new Action<News_Category>(this.attach_News_Categories), new Action<News_Category>(this.detach_News_Categories));
		this._News_Category1 = default(EntityRef<News_Category>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpCategoryID", DbType="Int")]
	public System.Nullable<int> UpCategoryID
	{
		get
		{
			return this._UpCategoryID;
		}
		set
		{
			if ((this._UpCategoryID != value))
			{
				if (this._News_Category1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUpCategoryIDChanging(value);
				this.SendPropertyChanging();
				this._UpCategoryID = value;
				this.SendPropertyChanged("UpCategoryID");
				this.OnUpCategoryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="News_Category_New", Storage="_News", ThisKey="ID", OtherKey="CategoryID")]
	public EntitySet<New> News
	{
		get
		{
			return this._News;
		}
		set
		{
			this._News.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="News_Category_News_Category", Storage="_News_Categories", ThisKey="ID", OtherKey="UpCategoryID")]
	public EntitySet<News_Category> News_Categories
	{
		get
		{
			return this._News_Categories;
		}
		set
		{
			this._News_Categories.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="News_Category_News_Category", Storage="_News_Category1", ThisKey="UpCategoryID", OtherKey="ID", IsForeignKey=true)]
	public News_Category News_Category1
	{
		get
		{
			return this._News_Category1.Entity;
		}
		set
		{
			News_Category previousValue = this._News_Category1.Entity;
			if (((previousValue != value) 
						|| (this._News_Category1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._News_Category1.Entity = null;
					previousValue.News_Categories.Remove(this);
				}
				this._News_Category1.Entity = value;
				if ((value != null))
				{
					value.News_Categories.Add(this);
					this._UpCategoryID = value.ID;
				}
				else
				{
					this._UpCategoryID = default(Nullable<int>);
				}
				this.SendPropertyChanged("News_Category1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_News(New entity)
	{
		this.SendPropertyChanging();
		entity.News_Category = this;
	}
	
	private void detach_News(New entity)
	{
		this.SendPropertyChanging();
		entity.News_Category = null;
	}
	
	private void attach_News_Categories(News_Category entity)
	{
		this.SendPropertyChanging();
		entity.News_Category1 = this;
	}
	
	private void detach_News_Categories(News_Category entity)
	{
		this.SendPropertyChanging();
		entity.News_Category1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewsComment")]
public partial class NewsComment : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private string _Date;
	
	private string _Description;
	
	private System.Nullable<int> _NewsID;
	
	private EntityRef<New> _New;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnNewsIDChanging(System.Nullable<int> value);
    partial void OnNewsIDChanged();
    #endregion
	
	public NewsComment()
	{
		this._New = default(EntityRef<New>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(25)")]
	public string Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsID", DbType="Int")]
	public System.Nullable<int> NewsID
	{
		get
		{
			return this._NewsID;
		}
		set
		{
			if ((this._NewsID != value))
			{
				if (this._New.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnNewsIDChanging(value);
				this.SendPropertyChanging();
				this._NewsID = value;
				this.SendPropertyChanged("NewsID");
				this.OnNewsIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="New_NewsComment", Storage="_New", ThisKey="NewsID", OtherKey="ID", IsForeignKey=true)]
	public New New
	{
		get
		{
			return this._New.Entity;
		}
		set
		{
			New previousValue = this._New.Entity;
			if (((previousValue != value) 
						|| (this._New.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._New.Entity = null;
					previousValue.NewsComments.Remove(this);
				}
				this._New.Entity = value;
				if ((value != null))
				{
					value.NewsComments.Add(this);
					this._NewsID = value.ID;
				}
				else
				{
					this._NewsID = default(Nullable<int>);
				}
				this.SendPropertyChanged("New");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Page")]
public partial class Page : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Title;
	
	private string _Content;
	
	private string _SeoTitle;
	
	private string _SeoMeta;
	
	private string _SeoMetaKey;
	
	private string _Url;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnSeoTitleChanging(string value);
    partial void OnSeoTitleChanged();
    partial void OnSeoMetaChanging(string value);
    partial void OnSeoMetaChanged();
    partial void OnSeoMetaKeyChanging(string value);
    partial void OnSeoMetaKeyChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    #endregion
	
	public Page()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
	public string Content
	{
		get
		{
			return this._Content;
		}
		set
		{
			if ((this._Content != value))
			{
				this.OnContentChanging(value);
				this.SendPropertyChanging();
				this._Content = value;
				this.SendPropertyChanged("Content");
				this.OnContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeoTitle", DbType="NVarChar(250)")]
	public string SeoTitle
	{
		get
		{
			return this._SeoTitle;
		}
		set
		{
			if ((this._SeoTitle != value))
			{
				this.OnSeoTitleChanging(value);
				this.SendPropertyChanging();
				this._SeoTitle = value;
				this.SendPropertyChanged("SeoTitle");
				this.OnSeoTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeoMeta", DbType="NVarChar(250)")]
	public string SeoMeta
	{
		get
		{
			return this._SeoMeta;
		}
		set
		{
			if ((this._SeoMeta != value))
			{
				this.OnSeoMetaChanging(value);
				this.SendPropertyChanging();
				this._SeoMeta = value;
				this.SendPropertyChanged("SeoMeta");
				this.OnSeoMetaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeoMetaKey", DbType="NVarChar(250)")]
	public string SeoMetaKey
	{
		get
		{
			return this._SeoMetaKey;
		}
		set
		{
			if ((this._SeoMetaKey != value))
			{
				this.OnSeoMetaKeyChanging(value);
				this.SendPropertyChanging();
				this._SeoMetaKey = value;
				this.SendPropertyChanged("SeoMetaKey");
				this.OnSeoMetaKeyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(150)")]
	public string Url
	{
		get
		{
			return this._Url;
		}
		set
		{
			if ((this._Url != value))
			{
				this.OnUrlChanging(value);
				this.SendPropertyChanging();
				this._Url = value;
				this.SendPropertyChanged("Url");
				this.OnUrlChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Title;
	
	private string _Code;
	
	private string _Content;
	
	private int _Price;
	
	private System.Nullable<int> _OldPrice;
	
	private System.Nullable<int> _Stock;
	
	private System.Nullable<int> _PaymentOptions;
	
	private System.Nullable<System.DateTime> _Date;
	
	private EntitySet<Product_ProductImage> _Product_ProductImages;
	
	private EntitySet<ProductCategory> _ProductCategories;
	
	private EntitySet<ProductComment> _ProductComments;
	
	private EntityRef<ProductPayment> _ProductPayment;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnPriceChanging(int value);
    partial void OnPriceChanged();
    partial void OnOldPriceChanging(System.Nullable<int> value);
    partial void OnOldPriceChanged();
    partial void OnStockChanging(System.Nullable<int> value);
    partial void OnStockChanged();
    partial void OnPaymentOptionsChanging(System.Nullable<int> value);
    partial void OnPaymentOptionsChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
	
	public Product()
	{
		this._Product_ProductImages = new EntitySet<Product_ProductImage>(new Action<Product_ProductImage>(this.attach_Product_ProductImages), new Action<Product_ProductImage>(this.detach_Product_ProductImages));
		this._ProductCategories = new EntitySet<ProductCategory>(new Action<ProductCategory>(this.attach_ProductCategories), new Action<ProductCategory>(this.detach_ProductCategories));
		this._ProductComments = new EntitySet<ProductComment>(new Action<ProductComment>(this.attach_ProductComments), new Action<ProductComment>(this.detach_ProductComments));
		this._ProductPayment = default(EntityRef<ProductPayment>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
	public string Code
	{
		get
		{
			return this._Code;
		}
		set
		{
			if ((this._Code != value))
			{
				this.OnCodeChanging(value);
				this.SendPropertyChanging();
				this._Code = value;
				this.SendPropertyChanged("Code");
				this.OnCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Content
	{
		get
		{
			return this._Content;
		}
		set
		{
			if ((this._Content != value))
			{
				this.OnContentChanging(value);
				this.SendPropertyChanging();
				this._Content = value;
				this.SendPropertyChanged("Content");
				this.OnContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
	public int Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPrice", DbType="Int")]
	public System.Nullable<int> OldPrice
	{
		get
		{
			return this._OldPrice;
		}
		set
		{
			if ((this._OldPrice != value))
			{
				this.OnOldPriceChanging(value);
				this.SendPropertyChanging();
				this._OldPrice = value;
				this.SendPropertyChanged("OldPrice");
				this.OnOldPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock", DbType="Int")]
	public System.Nullable<int> Stock
	{
		get
		{
			return this._Stock;
		}
		set
		{
			if ((this._Stock != value))
			{
				this.OnStockChanging(value);
				this.SendPropertyChanging();
				this._Stock = value;
				this.SendPropertyChanged("Stock");
				this.OnStockChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentOptions", DbType="Int")]
	public System.Nullable<int> PaymentOptions
	{
		get
		{
			return this._PaymentOptions;
		}
		set
		{
			if ((this._PaymentOptions != value))
			{
				if (this._ProductPayment.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPaymentOptionsChanging(value);
				this.SendPropertyChanging();
				this._PaymentOptions = value;
				this.SendPropertyChanged("PaymentOptions");
				this.OnPaymentOptionsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Product_ProductImage", Storage="_Product_ProductImages", ThisKey="ID", OtherKey="ProductID")]
	public EntitySet<Product_ProductImage> Product_ProductImages
	{
		get
		{
			return this._Product_ProductImages;
		}
		set
		{
			this._Product_ProductImages.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductCategory", Storage="_ProductCategories", ThisKey="ID", OtherKey="ProductCategoryID")]
	public EntitySet<ProductCategory> ProductCategories
	{
		get
		{
			return this._ProductCategories;
		}
		set
		{
			this._ProductCategories.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductComment", Storage="_ProductComments", ThisKey="ID", OtherKey="ProductID")]
	public EntitySet<ProductComment> ProductComments
	{
		get
		{
			return this._ProductComments;
		}
		set
		{
			this._ProductComments.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductPayment_Product", Storage="_ProductPayment", ThisKey="PaymentOptions", OtherKey="ID", IsForeignKey=true)]
	public ProductPayment ProductPayment
	{
		get
		{
			return this._ProductPayment.Entity;
		}
		set
		{
			ProductPayment previousValue = this._ProductPayment.Entity;
			if (((previousValue != value) 
						|| (this._ProductPayment.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ProductPayment.Entity = null;
					previousValue.Products.Remove(this);
				}
				this._ProductPayment.Entity = value;
				if ((value != null))
				{
					value.Products.Add(this);
					this._PaymentOptions = value.ID;
				}
				else
				{
					this._PaymentOptions = default(Nullable<int>);
				}
				this.SendPropertyChanged("ProductPayment");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Product_ProductImages(Product_ProductImage entity)
	{
		this.SendPropertyChanging();
		entity.Product = this;
	}
	
	private void detach_Product_ProductImages(Product_ProductImage entity)
	{
		this.SendPropertyChanging();
		entity.Product = null;
	}
	
	private void attach_ProductCategories(ProductCategory entity)
	{
		this.SendPropertyChanging();
		entity.Product = this;
	}
	
	private void detach_ProductCategories(ProductCategory entity)
	{
		this.SendPropertyChanging();
		entity.Product = null;
	}
	
	private void attach_ProductComments(ProductComment entity)
	{
		this.SendPropertyChanging();
		entity.Product = this;
	}
	
	private void detach_ProductComments(ProductComment entity)
	{
		this.SendPropertyChanging();
		entity.Product = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product_ProductCategory")]
public partial class Product_ProductCategory
{
	
	private int _ProductID;
	
	private int _ProductCategoryID;
	
	public Product_ProductCategory()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				this._ProductID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCategoryID", DbType="Int NOT NULL")]
	public int ProductCategoryID
	{
		get
		{
			return this._ProductCategoryID;
		}
		set
		{
			if ((this._ProductCategoryID != value))
			{
				this._ProductCategoryID = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product_ProductImage")]
public partial class Product_ProductImage : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductID;
	
	private int _ProductImageID;
	
	private EntityRef<Product> _Product;
	
	private EntityRef<ProductImage> _ProductImage;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnProductImageIDChanging(int value);
    partial void OnProductImageIDChanged();
    #endregion
	
	public Product_ProductImage()
	{
		this._Product = default(EntityRef<Product>);
		this._ProductImage = default(EntityRef<ProductImage>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductImageID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ProductImageID
	{
		get
		{
			return this._ProductImageID;
		}
		set
		{
			if ((this._ProductImageID != value))
			{
				if (this._ProductImage.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductImageIDChanging(value);
				this.SendPropertyChanging();
				this._ProductImageID = value;
				this.SendPropertyChanged("ProductImageID");
				this.OnProductImageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Product_ProductImage", Storage="_Product", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true)]
	public Product Product
	{
		get
		{
			return this._Product.Entity;
		}
		set
		{
			Product previousValue = this._Product.Entity;
			if (((previousValue != value) 
						|| (this._Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Product.Entity = null;
					previousValue.Product_ProductImages.Remove(this);
				}
				this._Product.Entity = value;
				if ((value != null))
				{
					value.Product_ProductImages.Add(this);
					this._ProductID = value.ID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("Product");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductImage_Product_ProductImage", Storage="_ProductImage", ThisKey="ProductImageID", OtherKey="ID", IsForeignKey=true)]
	public ProductImage ProductImage
	{
		get
		{
			return this._ProductImage.Entity;
		}
		set
		{
			ProductImage previousValue = this._ProductImage.Entity;
			if (((previousValue != value) 
						|| (this._ProductImage.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ProductImage.Entity = null;
					previousValue.Product_ProductImages.Remove(this);
				}
				this._ProductImage.Entity = value;
				if ((value != null))
				{
					value.Product_ProductImages.Add(this);
					this._ProductImageID = value.ID;
				}
				else
				{
					this._ProductImageID = default(int);
				}
				this.SendPropertyChanged("ProductImage");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCategory")]
public partial class ProductCategory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Title;
	
	private System.Nullable<int> _ProductCategoryID;
	
	private EntitySet<ProductCategory> _ProductCategories;
	
	private EntityRef<Product> _Product;
	
	private EntityRef<ProductCategory> _ProductCategory1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnProductCategoryIDChanging(System.Nullable<int> value);
    partial void OnProductCategoryIDChanged();
    #endregion
	
	public ProductCategory()
	{
		this._ProductCategories = new EntitySet<ProductCategory>(new Action<ProductCategory>(this.attach_ProductCategories), new Action<ProductCategory>(this.detach_ProductCategories));
		this._Product = default(EntityRef<Product>);
		this._ProductCategory1 = default(EntityRef<ProductCategory>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCategoryID", DbType="Int")]
	public System.Nullable<int> ProductCategoryID
	{
		get
		{
			return this._ProductCategoryID;
		}
		set
		{
			if ((this._ProductCategoryID != value))
			{
				if ((this._Product.HasLoadedOrAssignedValue || this._ProductCategory1.HasLoadedOrAssignedValue))
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductCategoryIDChanging(value);
				this.SendPropertyChanging();
				this._ProductCategoryID = value;
				this.SendPropertyChanged("ProductCategoryID");
				this.OnProductCategoryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCategory_ProductCategory", Storage="_ProductCategories", ThisKey="ID", OtherKey="ProductCategoryID")]
	public EntitySet<ProductCategory> ProductCategories
	{
		get
		{
			return this._ProductCategories;
		}
		set
		{
			this._ProductCategories.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductCategory", Storage="_Product", ThisKey="ProductCategoryID", OtherKey="ID", IsForeignKey=true)]
	public Product Product
	{
		get
		{
			return this._Product.Entity;
		}
		set
		{
			Product previousValue = this._Product.Entity;
			if (((previousValue != value) 
						|| (this._Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Product.Entity = null;
					previousValue.ProductCategories.Remove(this);
				}
				this._Product.Entity = value;
				if ((value != null))
				{
					value.ProductCategories.Add(this);
					this._ProductCategoryID = value.ID;
				}
				else
				{
					this._ProductCategoryID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Product");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCategory_ProductCategory", Storage="_ProductCategory1", ThisKey="ProductCategoryID", OtherKey="ID", IsForeignKey=true)]
	public ProductCategory ProductCategory1
	{
		get
		{
			return this._ProductCategory1.Entity;
		}
		set
		{
			ProductCategory previousValue = this._ProductCategory1.Entity;
			if (((previousValue != value) 
						|| (this._ProductCategory1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ProductCategory1.Entity = null;
					previousValue.ProductCategories.Remove(this);
				}
				this._ProductCategory1.Entity = value;
				if ((value != null))
				{
					value.ProductCategories.Add(this);
					this._ProductCategoryID = value.ID;
				}
				else
				{
					this._ProductCategoryID = default(Nullable<int>);
				}
				this.SendPropertyChanged("ProductCategory1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ProductCategories(ProductCategory entity)
	{
		this.SendPropertyChanging();
		entity.ProductCategory1 = this;
	}
	
	private void detach_ProductCategories(ProductCategory entity)
	{
		this.SendPropertyChanging();
		entity.ProductCategory1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductComment")]
public partial class ProductComment : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private int _MemberID;
	
	private string _Title;
	
	private string _Body;
	
	private int _ProductID;
	
	private int _Like;
	
	private int _Dislike;
	
	private EntityRef<Product> _Product;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnLikeChanging(int value);
    partial void OnLikeChanged();
    partial void OnDislikeChanging(int value);
    partial void OnDislikeChanged();
    #endregion
	
	public ProductComment()
	{
		this._Product = default(EntityRef<Product>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int NOT NULL")]
	public int MemberID
	{
		get
		{
			return this._MemberID;
		}
		set
		{
			if ((this._MemberID != value))
			{
				this.OnMemberIDChanging(value);
				this.SendPropertyChanging();
				this._MemberID = value;
				this.SendPropertyChanged("MemberID");
				this.OnMemberIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
	public string Body
	{
		get
		{
			return this._Body;
		}
		set
		{
			if ((this._Body != value))
			{
				this.OnBodyChanging(value);
				this.SendPropertyChanging();
				this._Body = value;
				this.SendPropertyChanged("Body");
				this.OnBodyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
	public int ProductID
	{
		get
		{
			return this._ProductID;
		}
		set
		{
			if ((this._ProductID != value))
			{
				if (this._Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductIDChanging(value);
				this.SendPropertyChanging();
				this._ProductID = value;
				this.SendPropertyChanged("ProductID");
				this.OnProductIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Like]", Storage="_Like", DbType="Int NOT NULL")]
	public int Like
	{
		get
		{
			return this._Like;
		}
		set
		{
			if ((this._Like != value))
			{
				this.OnLikeChanging(value);
				this.SendPropertyChanging();
				this._Like = value;
				this.SendPropertyChanged("Like");
				this.OnLikeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dislike", DbType="Int NOT NULL")]
	public int Dislike
	{
		get
		{
			return this._Dislike;
		}
		set
		{
			if ((this._Dislike != value))
			{
				this.OnDislikeChanging(value);
				this.SendPropertyChanging();
				this._Dislike = value;
				this.SendPropertyChanged("Dislike");
				this.OnDislikeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductComment", Storage="_Product", ThisKey="ProductID", OtherKey="ID", IsForeignKey=true)]
	public Product Product
	{
		get
		{
			return this._Product.Entity;
		}
		set
		{
			Product previousValue = this._Product.Entity;
			if (((previousValue != value) 
						|| (this._Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Product.Entity = null;
					previousValue.ProductComments.Remove(this);
				}
				this._Product.Entity = value;
				if ((value != null))
				{
					value.ProductComments.Add(this);
					this._ProductID = value.ID;
				}
				else
				{
					this._ProductID = default(int);
				}
				this.SendPropertyChanged("Product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductImage")]
public partial class ProductImage : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _SmallSize;
	
	private string _MediumSize;
	
	private string _LargeSize;
	
	private EntitySet<Product_ProductImage> _Product_ProductImages;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSmallSizeChanging(string value);
    partial void OnSmallSizeChanged();
    partial void OnMediumSizeChanging(string value);
    partial void OnMediumSizeChanged();
    partial void OnLargeSizeChanging(string value);
    partial void OnLargeSizeChanged();
    #endregion
	
	public ProductImage()
	{
		this._Product_ProductImages = new EntitySet<Product_ProductImage>(new Action<Product_ProductImage>(this.attach_Product_ProductImages), new Action<Product_ProductImage>(this.detach_Product_ProductImages));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmallSize", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string SmallSize
	{
		get
		{
			return this._SmallSize;
		}
		set
		{
			if ((this._SmallSize != value))
			{
				this.OnSmallSizeChanging(value);
				this.SendPropertyChanging();
				this._SmallSize = value;
				this.SendPropertyChanged("SmallSize");
				this.OnSmallSizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediumSize", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string MediumSize
	{
		get
		{
			return this._MediumSize;
		}
		set
		{
			if ((this._MediumSize != value))
			{
				this.OnMediumSizeChanging(value);
				this.SendPropertyChanging();
				this._MediumSize = value;
				this.SendPropertyChanged("MediumSize");
				this.OnMediumSizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LargeSize", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string LargeSize
	{
		get
		{
			return this._LargeSize;
		}
		set
		{
			if ((this._LargeSize != value))
			{
				this.OnLargeSizeChanging(value);
				this.SendPropertyChanging();
				this._LargeSize = value;
				this.SendPropertyChanged("LargeSize");
				this.OnLargeSizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductImage_Product_ProductImage", Storage="_Product_ProductImages", ThisKey="ID", OtherKey="ProductImageID")]
	public EntitySet<Product_ProductImage> Product_ProductImages
	{
		get
		{
			return this._Product_ProductImages;
		}
		set
		{
			this._Product_ProductImages.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Product_ProductImages(Product_ProductImage entity)
	{
		this.SendPropertyChanging();
		entity.ProductImage = this;
	}
	
	private void detach_Product_ProductImages(Product_ProductImage entity)
	{
		this.SendPropertyChanging();
		entity.ProductImage = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductPayment")]
public partial class ProductPayment : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Title;
	
	private string _Image;
	
	private EntitySet<Product> _Products;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    #endregion
	
	public ProductPayment()
	{
		this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductPayment_Product", Storage="_Products", ThisKey="ID", OtherKey="PaymentOptions")]
	public EntitySet<Product> Products
	{
		get
		{
			return this._Products;
		}
		set
		{
			this._Products.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Products(Product entity)
	{
		this.SendPropertyChanging();
		entity.ProductPayment = this;
	}
	
	private void detach_Products(Product entity)
	{
		this.SendPropertyChanging();
		entity.ProductPayment = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Seo")]
public partial class Seo : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Title;
	
	private string _Meta;
	
	private string _MetaKeys;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnMetaChanging(string value);
    partial void OnMetaChanged();
    partial void OnMetaKeysChanging(string value);
    partial void OnMetaKeysChanged();
    #endregion
	
	public Seo()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(150)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Meta", DbType="NVarChar(50)")]
	public string Meta
	{
		get
		{
			return this._Meta;
		}
		set
		{
			if ((this._Meta != value))
			{
				this.OnMetaChanging(value);
				this.SendPropertyChanging();
				this._Meta = value;
				this.SendPropertyChanged("Meta");
				this.OnMetaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeys", DbType="NVarChar(50)")]
	public string MetaKeys
	{
		get
		{
			return this._MetaKeys;
		}
		set
		{
			if ((this._MetaKeys != value))
			{
				this.OnMetaKeysChanging(value);
				this.SendPropertyChanging();
				this._MetaKeys = value;
				this.SendPropertyChanged("MetaKeys");
				this.OnMetaKeysChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Slider")]
public partial class Slider : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Image;
	
	private System.Nullable<int> _Queue;
	
	private string _Text;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnQueueChanging(System.Nullable<int> value);
    partial void OnQueueChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    #endregion
	
	public Slider()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(100)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Queue", DbType="Int")]
	public System.Nullable<int> Queue
	{
		get
		{
			return this._Queue;
		}
		set
		{
			if ((this._Queue != value))
			{
				this.OnQueueChanging(value);
				this.SendPropertyChanging();
				this._Queue = value;
				this.SendPropertyChanged("Queue");
				this.OnQueueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(350)")]
	public string Text
	{
		get
		{
			return this._Text;
		}
		set
		{
			if ((this._Text != value))
			{
				this.OnTextChanging(value);
				this.SendPropertyChanging();
				this._Text = value;
				this.SendPropertyChanged("Text");
				this.OnTextChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
